{
  "version": 3,
  "sources": ["src/app/admin/admin/admin.component.scss", "node_modules/bootstrap/scss/mixins/_breakpoints.scss"],
  "sourcesContent": ["@import 'bootstrap/scss/_functions';\n@import 'bootstrap/scss/_variables';\n@import 'bootstrap/scss/mixins/_breakpoints';\n\n@font-face {\n    font-family: 'NunitoSans';\n    src: url('../../../assets/fonts/NunitoSans.ttf') format('truetype'),\n}\n\n.admin {\n    font-family: 'NunitoSans';\n    display: flex;\n    min-width: 100%;\n    min-height: 100vh;\n    &_content {\n        width: 100%;\n        display: flex;\n        &_web {\n            background-color: #FAFBFE;\n            width: 100%;\n            padding: 24px;\n        }\n    }\n    &_mobile {\n        padding: 15px;\n        justify-content: space-between;\n        box-shadow: 0 6px 15px rgba(64,79,104,0.05);\n        border-bottom: 1px solid #E5E5E5;\n\n        img {\n            width: 60px;\n        }\n\n        svg {\n            width: 25px;\n        }   \n\n        &_sidenav {\n            height: 100%;\n            width: 0;\n            position: fixed;\n            top: 0;\n            left: 0;\n            background-color: #FFFFFF;\n            overflow-x: hidden;\n            transition: 0.5s;\n            padding-top: 60px;\n            &_header {\n                display: flex;\n                justify-content: space-between;\n                border-bottom: 1px solid #E5E5E5;\n                padding: 10px 15px;\n\n                img {\n                    width: 80px;\n                }\n\n                svg {\n                    width: 25px;\n                }\n            }\n            &_menu {\n                padding: 15px;\n                &_text {\n                    text-transform: capitalize;\n                    cursor: pointer;\n                    text-align: center;\n                    align-items: end;\n                    display: flex;\n                    @include media-breakpoint-down(sm) {\n                        display: block;\n                        padding: 12px 0;\n                    }\n                    div {\n                        @include media-breakpoint-down(sm) {\n                            padding: 12px 0;\n                        }\n                    }\n                }\n                &_text:last-of-type {\n                    font-weight: 700;\n                    border: 1px solid #14a077;\n                    color: #121212;\n                    background: #fff;\n                    border-radius: 4px;\n                    text-align: center;\n                }\n                span {\n                    width: 100%;\n                }\n            }\n            &_user {\n                display: grid;\n                justify-content: center;\n                text-align: center;\n                text-transform: capitalize;\n\n                &_role {\n                    text-align: center;\n                    color: #64666c;\n                    font-size: 12px;\n                    text-transform: lowercase;\n                }\n            }\n        }\n    }\n\n    &_menu {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        &_nav {\n            display: flex;\n            width: 50%;\n            justify-content: space-between;\n            align-items: center;\n            text-transform: capitalize;\n        }\n\n        img {\n            width: 50px;\n            border-radius: 50%;        \n        }\n\n        span {\n            padding: 10px 30px;\n            cursor: pointer;\n        }\n\n        span:hover {\n            background-color: #14a077;\n            color: #FFFFFF;\n            border-radius: 4px;\n        }\n\n        &_login {\n            font-weight: 700;\n            border: 1px solid #14a077;\n            color: #121212;\n            background: #fff;\n            border-radius: 4px;\n            text-align: center;\n            padding: 10px 30px;\n            cursor: pointer;\n\n            span {\n                padding: 0;\n            }\n        }\n\n        &_login:hover {\n            background-color: #14a077;\n            color: #FFFFFF;\n        }\n\n        &_dropdown {\n            border: none;\n            display: flex;\n            align-items: baseline;\n            color: #121212;\n            &_role {\n                text-align: left;\n                color: #64666c;\n                font-size: 12px;\n            }\n        }\n\n        &_dropdown:hover {\n            background: transparent;\n            color: #121212;\n        }\n    }\n}\n\n// .admin {\n//     padding: 30px 45px;\n//     border-bottom: 1px solid #E5E5E5BF;\n//     align-items: center;\n\n    \n\n// }\n\n.open {\n    width: 250px;\n    z-index: 2;\n    padding: 0;\n}\n\n.menu {\n    &_nav {\n        span {\n            padding: 10px 30px;\n        }\n    }\n}\n\n.overlay {\n    background-color: rgba(0,0,0,0.5);\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    z-index: 1;\n}", "// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],
  "mappings": ";AAIA;AACI,eAAA;AACA,OAAA,8BAAA,OAAA;;AAGJ,CAAA;AACI,eAAA;AACA,WAAA;AACA,aAAA;AACA,cAAA;;AACA,CAAA;AACI,SAAA;AACA,WAAA;;AACA,CAAA;AACI,oBAAA;AACA,SAAA;AACA,WAAA;;AAGR,CAAA;AACI,WAAA;AACA,mBAAA;AACA,cAAA,EAAA,IAAA,KAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA;AACA,iBAAA,IAAA,MAAA;;AAEA,CANJ,aAMI;AACI,SAAA;;AAGJ,CAVJ,aAUI;AACI,SAAA;;AAGJ,CAAA;AACI,UAAA;AACA,SAAA;AACA,YAAA;AACA,OAAA;AACA,QAAA;AACA,oBAAA;AACA,cAAA;AACA,cAAA;AACA,eAAA;;AACA,CAAA;AACI,WAAA;AACA,mBAAA;AACA,iBAAA,IAAA,MAAA;AACA,WAAA,KAAA;;AAEA,CANJ,4BAMI;AACI,SAAA;;AAGJ,CAVJ,4BAUI;AACI,SAAA;;AAGR,CAAA;AACI,WAAA;;AACA,CAAA;AACI,kBAAA;AACA,UAAA;AACA,cAAA;AACA,eAAA;AACA,WAAA;;ACQhB,OAAA,CAAA,SAAA,EAAA;ADbY,GAAA;AAOQ,aAAA;AACA,aAAA,KAAA;;;ACKpB,OAAA,CAAA,SAAA,EAAA;ADHgB,GAVJ,+BAUI;AAEQ,aAAA,KAAA;;;AAIZ,CAhBA,8BAgBA;AACI,eAAA;AACA,UAAA,IAAA,MAAA;AACA,SAAA;AACA,cAAA;AACA,iBAAA;AACA,cAAA;;AAEJ,CA1BJ,0BA0BI;AACI,SAAA;;AAGR,CAAA;AACI,WAAA;AACA,mBAAA;AACA,cAAA;AACA,kBAAA;;AAEA,CAAA;AACI,cAAA;AACA,SAAA;AACA,aAAA;AACA,kBAAA;;AAMhB,CAAA;AACI,WAAA;AACA,mBAAA;AACA,eAAA;;AAEA,CAAA;AACI,WAAA;AACA,SAAA;AACA,mBAAA;AACA,eAAA;AACA,kBAAA;;AAGJ,CAbJ,WAaI;AACI,SAAA;AACA,iBAAA;;AAGJ,CAlBJ,WAkBI;AACI,WAAA,KAAA;AACA,UAAA;;AAGJ,CAvBJ,WAuBI,IAAA;AACI,oBAAA;AACA,SAAA;AACA,iBAAA;;AAGJ,CAAA;AACI,eAAA;AACA,UAAA,IAAA,MAAA;AACA,SAAA;AACA,cAAA;AACA,iBAAA;AACA,cAAA;AACA,WAAA,KAAA;AACA,UAAA;;AAEA,CAVJ,iBAUI;AACI,WAAA;;AAIR,CAfA,gBAeA;AACI,oBAAA;AACA,SAAA;;AAGJ,CAAA;AACI,UAAA;AACA,WAAA;AACA,eAAA;AACA,SAAA;;AACA,CAAA;AACI,cAAA;AACA,SAAA;AACA,aAAA;;AAIR,CAZA,mBAYA;AACI,cAAA;AACA,SAAA;;AAcZ,CAAA;AACI,SAAA;AACA,WAAA;AACA,WAAA;;AAKI,CAAA,SAAA;AACI,WAAA,KAAA;;AAKZ,CAAA;AACI,oBAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AACA,SAAA;AACA,UAAA;AACA,YAAA;AACA,OAAA;AACA,WAAA;;",
  "names": []
}
