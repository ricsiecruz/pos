{
  "version": 3,
  "sources": ["node_modules/bootstrap/scss/mixins/_breakpoints.scss", "src/app/admin/products/products.component.scss"],
  "sourcesContent": ["// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n", "@import 'bootstrap/scss/_functions';\n@import 'bootstrap/scss/_variables';\n@import 'bootstrap/scss/mixins/_breakpoints';\n\n.products {\n    @include media-breakpoint-down(sm) {\n        padding: 20px;\n    }\n\n    &_title {\n        display: flex;\n        justify-content: space-between;\n        font-weight: 700;\n        color: #092C4C;\n        font-size: 18px;\n        margin-bottom: 24px;\n        &_add {\n            background: #FF9F43;\n            cursor: pointer;\n            padding: 8px 11px;\n            color: #ffffff;\n            font-size: 14px;\n            border-radius: 8px;\n        }\n        &_add:hover {\n            background: #ffbb00;\n        }\n    }\n    &_table {\n        margin-bottom: 1.5rem;\n        background-color: #ffffff;\n        transition: all 0.5s ease-in-out;\n        position: relative;\n        border-radius: 4px;\n        border: 1px solid #dbe0e6;\n        box-shadow: none;\n        padding: 24px;\n        @include media-breakpoint-down(sm) {\n            padding: 15px;\n            display: grid;\n            overflow-x: auto;\n        }\n\n        &_header {\n            display: flex;\n            justify-content: space-between;\n            padding: 0 24px;\n            padding-bottom: 0.75rem;\n            /* border-top: 1px solid #dbe0e6; */\n            border-bottom: 1px solid #dbe0e6;\n            div {\n                font-weight: 600;\n                font-size: 15px;\n            }\n        }\n        &_list {\n            display: flex;\n            justify-content: space-between;\n            padding: 24px;\n            color: #092C4C;\n            font-size: 14px;\n            font-weight: 400;\n            line-height: normal;\n            border-bottom: 1px solid #dbe0e6;\n            &_add {\n                cursor: pointer;\n                border-radius: 3px;\n                text-align: center;\n                padding: 0.25rem 0.5rem;\n                font-size: 0.75rem;\n                background-color: #092C4C !important;\n                border: 1px solid #092C4C !important;\n                color: #ffffff;\n                box-shadow: 0 4px 20px rgba(9, 44, 76, 0.15);\n            }\n            &_add:hover {\n                background-color: #051a2c !important;\n                border: 1px solid #051a2c !important;\n                box-shadow: 0 3px 10px rgba(9, 44, 76, 0.5);\n            }\n        }\n    }\n}\n\n.table {\n    &_one {\n        width: 200px;\n    }\n    &_two {\n        width: 100px;\n    }\n    &_three {\n        width: 100px;\n    }\n    &_four {\n        width: 100px;\n    }\n    &_five {\n        width: 80px;\n    }\n}\n\n.modal-header {\n    font-size: 16px;\n    font-weight: 600;\n    color: #1B2850;\n}\n\n.modal-header span {\n    color: #FF9F43;\n    padding-left: 5px;\n}\n\n.modal-body-label {\n    font-size: 14px;\n    color: #5B6670;\n    margin-bottom: 8px;\n    text-transform: capitalize;\n}\n\n.modal-btns {\n    column-gap: 10px;\n    display: flex;\n    justify-content: end;\n    padding: 20px 0;\n    padding-bottom: 0;\n}\n\n.modal-btns-cancel {\n    background: #67748E;\n    color: #ffffff;\n}\n\n.modal-btns-cancel:hover {\n    background: #424b52;\n}\n\n.modal-btns-add {\n    background: #FF9F43;\n    color: #ffffff;\n}\n\n.modal-btns-add:hover {\n    background: #ffbb00;\n}\n\n.btn {\n    border-radius: 3px;\n    padding: 0.625rem 1.25rem;\n    padding: 0.5rem 0.85rem;\n    font-size: 0.85rem;\n    transition: all 0.5s;\n}\n\ninput {\n    border-color: #e9edf6;\n    color: #5B6670;\n    font-size: 0.875rem;\n    line-height: 1.6;\n    padding: 0.5rem 0.85rem;\n    margin-bottom: 1rem;\n}\n\n::placeholder {\n    color: #8b949b;\n}\n"],
  "mappings": ";AA4EI,OAAA,CAAA,SAAA,EAAA;ACxEJ,GAAA;AAEQ,aAAA;;;AAGJ,CAAA;AACI,WAAA;AACA,mBAAA;AACA,eAAA;AACA,SAAA;AACA,aAAA;AACA,iBAAA;;AACA,CAAA;AACI,cAAA;AACA,UAAA;AACA,WAAA,IAAA;AACA,SAAA;AACA,aAAA;AACA,iBAAA;;AAEJ,CARA,kBAQA;AACI,cAAA;;AAGR,CAAA;AACI,iBAAA;AACA,oBAAA;AACA,cAAA,IAAA,KAAA;AACA,YAAA;AACA,iBAAA;AACA,UAAA,IAAA,MAAA;AACA,cAAA;AACA,WAAA;;ADwCJ,OAAA,CAAA,SAAA,EAAA;AChDA,GAAA;AAUQ,aAAA;AACA,aAAA;AACA,gBAAA;;;AAGJ,CAAA;AACI,WAAA;AACA,mBAAA;AACA,WAAA,EAAA;AACA,kBAAA;AAEA,iBAAA,IAAA,MAAA;;AACA,CAPJ,sBAOI;AACI,eAAA;AACA,aAAA;;AAGR,CAAA;AACI,WAAA;AACA,mBAAA;AACA,WAAA;AACA,SAAA;AACA,aAAA;AACA,eAAA;AACA,eAAA;AACA,iBAAA,IAAA,MAAA;;AACA,CAAA;AACI,UAAA;AACA,iBAAA;AACA,cAAA;AACA,WAAA,QAAA;AACA,aAAA;AACA,oBAAA;AACA,UAAA,IAAA,MAAA;AACA,SAAA;AACA,cAAA,EAAA,IAAA,KAAA,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA;;AAEJ,CAXA,uBAWA;AACI,oBAAA;AACA,UAAA,IAAA,MAAA;AACA,cAAA,EAAA,IAAA,KAAA,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA;;AAOZ,CAAA;AACI,SAAA;;AAEJ,CAAA;AACI,SAAA;;AAEJ,CAAA;AACI,SAAA;;AAEJ,CAAA;AACI,SAAA;;AAEJ,CAAA;AACI,SAAA;;AAIR,CAAA;AACI,aAAA;AACA,eAAA;AACA,SAAA;;AAGJ,CANA,aAMA;AACI,SAAA;AACA,gBAAA;;AAGJ,CAAA;AACI,aAAA;AACA,SAAA;AACA,iBAAA;AACA,kBAAA;;AAGJ,CAAA;AACI,cAAA;AACA,WAAA;AACA,mBAAA;AACA,WAAA,KAAA;AACA,kBAAA;;AAGJ,CAAA;AACI,cAAA;AACA,SAAA;;AAGJ,CALA,iBAKA;AACI,cAAA;;AAGJ,CAAA;AACI,cAAA;AACA,SAAA;;AAGJ,CALA,cAKA;AACI,cAAA;;AAGJ,CAAA;AACI,iBAAA;AACA,WAAA,SAAA;AACA,WAAA,OAAA;AACA,aAAA;AACA,cAAA,IAAA;;AAGJ;AACI,gBAAA;AACA,SAAA;AACA,aAAA;AACA,eAAA;AACA,WAAA,OAAA;AACA,iBAAA;;AAGJ;AACI,SAAA;;",
  "names": []
}
